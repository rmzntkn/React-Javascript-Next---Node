import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Layout } from "../componens/layout";
import styles from "../styles/Home.module.css";
import React, { useState, useEffect, useRef } from "react";

export default function Home({ characters, section }) {
	const [count, setCount] = useState(0);
	const [message, setMessage] = useState("Hi there, how are you?");
	// const [windowWidth, setWindowWidth] = useState(window.innerWidth);
	const [name, setName] = useState("");

	//on every render
	// useEffect(() => {
	// 	window.addEventListener("resize", updateWindowWidth);
	// 	console.log("I re-rendered");
	// });

	// useEffect(() => {}, []);

	useEffect(() => {
		console.log(`The name changed: ${name}`);
	}, [name]);

	const inputEl = useRef(null);
	const onButtonClick = () => {
		// `current` points to the mounted text input element
		inputEl.current.focus();
	};

	// useEffect(() => {
	// 	window.addEventListener("resize", updateWindowWidth);
	// 	return () => {
	// 		window.removeEventListener("resize", updateWindowWidth);
	// 	};
	// }, []);

	return (
		<>
			<Layout simpson={characters} section={section}></Layout>
			<div className={styles.container}>
				<Head>
					``
					<title>Create Next App</title>
					<meta name="description" content="Generated by create next app" />
					<link rel="icon" href="/favicon.ico" />
				</Head>
				<div>
					<input ref={inputEl} type="text" />
					<button onClick={onButtonClick}>Focus the input</button>
					<h1>The useEffect Hook</h1>
					{/* <h2>The window width is:{windowWidth} </h2> */}

					<input
						value={name}
						onChange={(e) => setName(e.target.value)}
						placeholder="Enter your name"
					/>
				</div>

				<h1>{message}</h1>
				<button onClick={() => setCount(count + 1)}>
					10: Click me {count} times
				</button>
				<p>You clicked {count} times</p>
			</div>
		</>
	);
}

export async function getStaticProps() {
	const data = await fetch("https://rickandmortyapi.com/api/character/");
	const characters = await data.json();

	return {
		props: {
			characters,
			section: "main",
		},
	};
}
